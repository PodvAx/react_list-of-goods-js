{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","isSorted","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAEtBC,GAAW,EA6BFC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA/Be,SAACC,EAAOL,EAAWE,GACxC,IAAMI,EAAW,YAAOD,GAuBxB,OArBIL,EACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAGH,OAFAE,GAAW,EAEJW,EAAME,cAAcD,GAC7B,KAAKb,EAGH,OAFAC,GAAW,EAEJW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAIbd,IADSK,EAMJA,EAAYI,EAAYM,UAAYN,EAOtBO,CAAenB,EAAiBM,EAAWE,GAEhE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaN,IAC5BmB,UAAWG,IACT,iBACA,CAAE,WAAYjB,IAAcL,IALhC,iCAWA,wBACEoB,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IACT,oBACA,CAAE,WAAYjB,IAAcJ,IALhC,4BAWA,wBACEmB,KAAK,SACLC,QAAS,kBACLb,GADYD,IAGhBY,UAAWG,IACT,oBACA,CAAE,YAAaf,IAPnB,qBAaCL,GACC,wBACEkB,KAAK,SACLC,QAAS,WACPb,GAAa,GACbF,EAAa,KAEfa,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC7GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.525589d1.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nlet isSorted = false;\n\nconst getSortedGoods = (goods, sortField, isReverse) => {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          isSorted = true;\n\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          isSorted = true;\n\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  } else if (isReverse) {\n    isSorted = true;\n  } else {\n    isSorted = false;\n  }\n\n  return isReverse ? sortedGoods.reverse() : sortedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getSortedGoods(goodsFromServer, sortField, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => (isReverse\n            ? setIsReverse(false)\n            : setIsReverse(true))}\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsReverse(false);\n              setSortField('');\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}